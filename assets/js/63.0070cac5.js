(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{336:function(t,n,s){"use strict";s.r(n);var o=s(14),c=Object(o.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h3",{attrs:{id:"const声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#const声明"}},[this._v("#")]),this._v(" const声明")]),this._v(" "),n("p",[this._v("示例：")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v('const常量在("同一个作用域")中声明后不可以更改声明后的值，例如：\nconst url = "https://baidu.com/api/v1";\nurl = "hdcms";  //这种写法\n\n//全局声明一个const，全局的其中一个函数体内也声明一个const则不会报错，因为没有在一个作用域内，所以不会影响。\nconst url = "https://baidu.com/api/v1";\nfunction show() {\n\tconst url = "https://baidu.com/api/v1";\n}\nshow();\n\n//const如果是字符串赋值的这种基本量标量是不可以对值进行更改的，如果是对象引用类型可以对值进行更改，例如：\nconst config = {\n\turl: \'https://www.baidu.com/\';\n};\nconfig.url = \'https://www.huawei.com/\';\n\n//如果在花括号块级作用域进行赋值也不会报错\nconst url = "https://www.baidu.com/";\n{\n\tconst url = \'https://www.huawei.com/\';\n}\nconsole.log(url);\n')])])])])}),[],!1,null,null,null);n.default=c.exports}}]);