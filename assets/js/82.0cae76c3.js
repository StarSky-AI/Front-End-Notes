(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{354:function(t,n,s){"use strict";s.r(n);var e=s(14),a=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h3",{attrs:{id:"var、let、const不同点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#var、let、const不同点"}},[this._v("#")]),this._v(" var、let、const不同点")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v("1. var声明变量存在变量提升，let和const不存在变量提升\n\n2. let、const都是块级局部变量\n\n3. 同一作用域下let和const不能声明同名变量，而var可以\n\n4. let只能先声明，再进行调用；var可以先调用再声明\n\n5. let在声明的时候可以不用初始化，const在声明的时候必须要进行初始化。\n\n6. const定义的常量的值在同一个作用域下不可以再进行赋值修改的，但是const定义的数组和对象是可以进行进行赋值修改的\n\n7. 用let ，const声明的全局变量不归window所有\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);