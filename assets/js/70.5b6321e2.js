(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{339:function(n,o,t){"use strict";t.r(o);var e=t(14),l=Object(e.a)({},(function(){var n=this,o=n.$createElement,t=n._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"for-of循环遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-of循环遍历"}},[n._v("#")]),n._v(" for-of循环遍历")]),n._v(" "),t("p",[n._v("for of 与 for in 的区别:(for in 通过下标进行取值， for of 直接取键值)")]),n._v(" "),t("p",[n._v("应用场景: for of是取迭代对象，注意：for of不可以直接遍历对象, for in 可以")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("//遍历字符串\nlet str = 'sdgsdjoighsoi';\nfor(let content of str) {\n\tconsole.log(content); // s d g s d j o i g h s o i\n}\n\n//遍历数组\nlet hdms = ['你好','哈哈'];\nfor(let value of hdms) {\n\tconsole.log(value); // 你好  哈哈\n}\n\n//遍历数组对象\nlet hd = [\n\t{title: '我是标题1',lesson: 1},\n\t{title: '我是标题2',lesson: 2},\n\t{title: '我是标题3',lesson: 3}\n];\nfor(let value of hd) {\n\tconsole.log(value.title); // 我是标题1 我是标题2 我是标题3\n\tconsole.log(value.lesson); // 1 2 3\n}\n//for of 循环会改变引用类型里面的值，但不会改变数值类型的值。\nlet arr = [1,2,3];\nfor(let value of arr) {\n\tvalue += 10;\n}\nconsole.log(arr) // [1,2,3]\nlet arr2 = [{num: 1},{num:2},{num:3}];\nfor(let value of arr2) {\n\tvalue.num += 10;\n}\nconsole.log(arr2) // [{num: 11},{num: 12},{num: 13}]\n")])])])])}),[],!1,null,null,null);o.default=l.exports}}]);